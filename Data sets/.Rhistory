install.packages("readr")
installed.packages()
.libPaths()
q()
1+1 #prompt to perform simple multiplication
1+1 #prompt to perform simple addition
2 * 4 #prompt to perform simple multiplication
3/7 #prompt to perform simple division
11.75 - 4.813 #prompt to perform simple subtraction
10^2 #prompt to find the result of 10 raised to the power of 2
log(10) #prompt to see how R interprets the equation log(x)
log10(10) #prompt to find the log of (x) to the base of 10 and compare with the prompt in line 17
7 < 10 #is 7 lesser than 10?
5 > 20 #is 5 greater than 20?
20 == 10 * 2 #is 20 equal to the product of 10 and 2?
50 != 100/2 #is 50 not equal to 100 divided by 2?
45 + 15 >= 35 * 2 #is the sum of 45 and 15 greater than or equal to the product of 35 and 2?
seq(from = 0, to = 10, by = 1) #prompt to give the sequence of numbers that begin at 0, ends at 10, and has a difference of 1 between numbers in the sequence
seq(from = 1, to = 10, by 0.5) #argument to return the sequence of numbers that begin at 1, ends at 10, and has a difference of 0.5 between numbers in the sequence
seq(from = 0, to = 10, by = 1) #prompt to give the sequence of numbers that begin at 0, ends at 10, and has a difference of 1 between numbers in the sequence
seq(from = 1, to = 10, by = 0.5) #argument to return the sequence of numbers that begin at 1, ends at 10, and has a difference of 0.5 between numbers in the sequence
seq(from = 1, to = 100, by = 5) #argument to give the sequence of numbers that begin at 1, ends at 100, and has a difference of 5 between numbers in the sequence
seq(from = 1, to = 100, by = 4)
x <- seq(from =1, to = 100, by = 4)
x
y <- seq(from = 1, to = 100, by = 5)
x * y
y <- seq(from = 1, to = 100, by = 5)
x * y
x + y
rm(list = ls())
install.packages(c("dplyr", "ggplot2"))
library(dplyr)
library(ggplot2)
?qplot()
# In-depth play with plotting graphs and histograms
?qplot() #to get help on how to use this function
# in the bottom right pane, details on how to use the function open up
# qplot() is now deprrecated and ggplot() is now advised
?ggplot() #to get help on how to use this function
x <- seq(from -10, to = 10, by = 0.1) #argument to create a sequence of numbers from -10 to 10 with a difference of 0.1 between the numbers
x <- seq(from = -10, to = 10, by = 0.1) #argument to create a sequence of numbers from -10 to 10 with a difference of 0.1 between the numbers
y <- x^2 #argument to assign y the value of x squared (x^2)
qplot(x, y, geom="line") #quick plot x and y, with 'geom' as vector character specifying the geometric figures to draw
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
ggplot(x, y, geom="line")
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
ggplot(x, y, geom_point = line)
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
ggplot(x, y, geom_point(mapping = aes(line)))
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
ggplot(x, y, geom_point(mapping = aes(line))
ggplot (x, y, aes(x = x, y = y)) +
ggplot(x, y, aes(x = x, y = y)) +
geom_line(colour = "black", size = 1) +
labs(title = "Plot of y = x^2", x = "x", y = "y = x^2") +
theme_minimal()
rlang::last_trace()
rlang::last_trace(drop = FALSE)
rm(list = ls())
x <- seq(from = -10, to = 10, by = 0.1) #argument to create a sequence of numbers from -10 to 10 with a difference of 0.1 between the numbers
y <- x^2 #argument to assign y the value of x squared (x^2)
df <-data.frame(x,y) #defining the data
ggplot(data = df) +
geom_line(aes(x = "x", y = "y"), color = "black)
x <- seq(from = -10, to = 10, by = 0.1) #argument to create a sequence of numbers from -10 to 10 with a difference of 0.1 between the numbers
y <- x^2 #argument to assign y the value of x squared (x^2)
df <-data.frame(x,y) #defining the data
ggplot(data = df) +
geom_line(aes(x = "x", y = "y"), color = "black)
ggplot(data = df) +
geom_line(aes(x = "x", y = "y"), color = "black)
ggplot(data = df) +
geom_line(aes(x = "x", y = "y"), color = "blue") +
ggplot(data = df)+
geom_line(aes(x = "x", y = "y"), color = "blue")+
geom_line(aes(x = "x", y = "y"), color = "green)
ggplot(df, aes(x = "x", y = "y")) +
ggplot(df, aes(x = "x", y = "y")) +
geom_line(color="blue",size =1) #to define the colour and size of the graph line
ggtitle("Plot of y = x^2) #to define the title of the graph
theme_ipsum() #to define the text or font style
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
ggplot(df, aes(x = "x", y = "y")) +
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
df <-data.frame(x,y)
ggplot(df, aes(x = "x", y = "y")) +
geom_line(color="blue",linewidth=2)
ggtitle("Plot of y = x^2)
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
df <-data.frame(x,y)
ggplot(df, aes(x = "x", y = "y")) +
ggplot(df, aes(x = "x", y = "y")) +
geom_line(color="blue")
ggtitle("Plot of y = x^2)
theme_ipsum()
ggplot(df, aes(x = "x", y = "y")) +
rm(list=ic())
rm(list=ls())
seq(-10, 10, 0.1)
x <- seq(-10, 10, 0.1)
y <- x^2
df <- data.frame(x,y)
ggplot(df, aes(x="x",y="y")) +
geom_lime(color="blue")
ggplot(df, aes(x="x",y="y")) +
geom_line(color="blue")
rm(list=ls())
seq(-10, 10, 5)
x <- seq(-10, 10, 5)
y <- x^2
df <- data.frame(x,y)
ggplot(df, aes(x="x",y="y")) +
geom_line(color="blue")
ggplot(df, aes(x="x",y="y")) +
geom_line(color="blue")
annotate()
ggplot(df, aes(x="x",y="y")) +
geom_line(color="blue")
geom_annotate()
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
ggplot(x, y, geom_point(mapping = aes(line))
x <- seq(from = -10, to = 10, by = 0.1)
x <- seq(from = -10, to = 10, by = 0.1) #argument to create a sequence of numbers from -10 to 10 with a difference of 0.1 between the numbers
y <- x^2 #argument to assign y the value of x squared (x^2)
qplot(x, y, geom="line") #quick plot x and y, with 'geom' as vector character specifying the geometric figures to draw
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
ggplot(x, y, geom="line")
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
ggplot(x, y, geom_point="line")
rlang::last_trace()
rlang::last_trace(drop = FALSE)
x <- seq(from = -10, to = 10, by = 0.1) #argument to create a sequence of numbers from -10 to 10 with a difference of 0.1 between the numbers
y <- x^2 #argument to assign y the value of x squared (x^2)
qplot(x, y, geom="line") #quick plot x and y, with 'geom' as vector character specifying the geometric figures to draw
# correcting the function in line 80 since qplot is deprecated
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
ggplot(x, y, geom_point="line")
rm(list=ls())
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
ggplot(aes(x=x, y=y))+
geom_line()
rm(list=ls())
seq(-10, 10, 5)
x <- seq(-10, 10, 5)
y <- x^2
df <- data.frame(x,y)
ggplot(df, aes(x="x",y="y")) +
geom_line(color="blue")
geom_annotate()
View(df)
ggplot(data = df, aes(x=x, y=y))+
geom_line()
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
?ggplot
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
df <-data.frame(x,y)
ggplot(df, aes(x = "x", y = "y")) +
geom_line(color="blue")
# yet another trial without annotation
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
df <-data.frame(x,y)
ggplot(df, aes(x = "x", y = "y")) +
geom_line(col="blue")
# yet another trial without annotation
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
df <-data.frame(x,y)
ggplot(df, aes(x = "x", y = "y")) +
geom_line(col=blue)
# yet another trial without annotation
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
df <-data.frame(x,y)
ggplot(df, aes(x = "x", y = "y")) +
geom_line(color="blue")
View(df)
# yet another trial without annotation
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
df <-data.frame(x,y)
ggplot(df, aes(x = "x", y = "y")) +
geom_line(color="blue")
# yet another trial without annotation
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
df <-data.frame(x,y)
ggplot(df, aes(x = x, y = y)) +
geom_line(color="blue")
names(df)
rm(list=ls())
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
ggplot(data=df, aes(x=x, y=y))+
geom_line()
ggplot(data = df, aes(x=x, y=y))+
geom_line()
rm(list=ls())
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
df <- data.frame(x,y)
ggplot(data = df, aes(x=x, y=y))+
geom_line()
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
df <- data.frame(x,y)
ggplot(data = df, aes(x=x, y=y))+
geom_line()
ggplot(data = df, aes(x=x, y=y))+
geom_line()
geom_line(colour="blue")
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
df <- data.frame(x,y)
ggplot(data = df, aes(x=x, y=y))+
geom_line()
geom_line(color="blue")
seq(-10, 10, 5)
x <- seq(-10, 10, 5)
y <- x^2
df <- data.frame(x,y)
ggplot(df, aes(x="x",y="y")) +
geom_line(color="blue")
geom_annotate()
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
ggplot(x, y, geom="line")
ggplot(data = df, aes(x=x, y=y))+
geom_line()
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
df <- data.frame(x,y)
ggplot(data = df, aes(x=x, y=y))+
geom_line()
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
ggplot(data = df, aes(x=x, y=y))+
geom_line()
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
ggplot(data = df, aes(x=x, y=y))+
geom_line()
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
df <- data.frame(x,y)
ggplot(data = df, aes(x=x, y=y))+
geom_line()
x <- seq(from = -10, to = 10, by = 0.1)
y <- x^2
df <- data.frame(x,y)
ggplot(data = df, aes(x=x, y=y))+
geom_line()
geom_line(color=blue)
library(readxl)
compensation <- read_excel("Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Data sets/compensation.csv")
compensation <- read_csv("Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Data sets/compensation.csv")
compensation <- read.csv("Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Data sets/compensation.csv")
library(readr)
compensation <- read.csv("Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Data sets/compensation.csv")
View(compensation)
file.choose()
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Data sets")
<-read.csv("compensation.csv")
read.csv("compensation.csv")
View(compensation)
names (compensation)
# Getting started with importing data in preparation for data analysis
library(readr)
compensation <- read.csv("Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Data sets/compensation.csv") #to find path containing data file
compensation <- read.csv("Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Data sets/compensation.csv")
