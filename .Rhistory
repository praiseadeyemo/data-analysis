#Activity on dealing with untidy data
library(readr)
nasty.format <- read.csv("/Users/praiz1/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Data sets/nasty format.csv")
# Please note that error seen in Console was because the object assigned to the file was nasty.format and I had written a code names (nastyformat). Important to be careful with object names and stick to them to avoid errors
names (nasty.format)
# Data is indeed untidy as variables are not well defined
dim (nasty.format)
str (nasty.format)
# Code in line 62 showed that this data has 37 observations and 11 variables
# Code in line 63 showed the full features of the data set
# [view (nasty.format) #to view the full data set] was initially written as an argument but R returned an error that the function "view" could not be found.
#Please, also note that packages relevant for functions need to be recalled from the library
library(dplyr)
glimpse (nasty.format) #horizontal view of data
tibble::as_tibble (nasty.format) #vertical view of data
library(dplyr)
nasty.format <- filter(nasty.format, Bottle != "") #to keep only rows that have an entry in the Bottle variable
glimpse(nasty.format)
library(tidyr)
tidy_data <- gather(nasty.format, Date, Abundance, 4:11) #to tidy up the data and rename it tidy_data. New variables containing "date" and "abundance" are to be created, and specifically for columns 4 to 11
glimpse(tidy_data)
# Cleaning the new variable "Date"
# The "date" variable has an 'X' in front of the dates and we need R to recognize these as dates
library(stringr)
tidy_data <- mutate(tidy_data, Date = substr(Date, 2, 20)) #to further clean the variable and arrange the dates in each observation for the second month and within year "20"
# mutate() function is used to change or add variables, substr() function is used to specify the variable, which character to keep and the end date
unique(tidy_data$Date) #to show all the unique dates in the variable
# unique() returns a list of unique values in  a specific set of columns in a dataframe
library(lubridate) #package contains different formats for data e.g. ymd, dmy, myd etc
tidy_data <- mutate(tidy_data, Date = dmy(Date)) #to specify the date format
glimpse(tidy_data) #to view the edits made by R to the data
# R returned a data set with date in the ymd format. Not sure if this is an inverted response. Was expecting to see 01-02-2013 and not 2013-02-01
tidy_data <- mutate(tidy_data, Date = ymd(Date)) #rewriting the argument to specify the date format
glimpse(tidy_data)
# date still having the ymd format
# [tidy_data <- mutate(tidy_data, Date = mdy(Date))] returned an error - all formats failed to parse
#now we're back to normal. I ran the whole chunk on tidying the dates again
#back to creating the scatter plots!
# Playing with the data
library(ggplot2) #package used for graphs and visualizations generally
ggplot(data = tidy_data, aes(x=Date, y=Abundance)) + #data is the specific dataset we want to visualize, 'aes' is used to define which variables (columns) we want for our x and y axis
geom_point() + #function used to create scatterplots - most useful for displaying the relationship between two continuous variables
facet_wrap(~Bottle) #specifying which variable we want the x and y axis to be about
library(base)
library(tidyr)
library(dplyr)
tidy_data <- spread(tidy_data, Abundance)
testing.more.functions.data <- spread(nasty.format, Temp)
testing.more.functions.data <- spread(nasty.format)
testing.more.functions.data <- separate(nasty.format, Temp)
?separate
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 4")
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 4")
library(readr)
GardenOzone <- read_csv("GardenOzone.csv")
View(GardenOzone)
Summary(GardenOzone)
glimpse(GardenOzone)
Glimpse(GardenOzone)
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 4")
library(readr)
GardenOzone <- read_csv("GardenOzone.csv")
View(GardenOzone)
str(GardenOzone)
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 4")
library(readr)
GardenOzone <- read_csv("GardenOzone.csv")
show_col_types = FALSE
View(GardenOzone)
str(GardenOzone)
library(dplyr)
tibble(GardenOzone)
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 4")
library(readr)
GardenOzone <- read_csv("GardenOzone.csv")
show_col_types = FALSE
View(GardenOzone)
str(GardenOzone)
library(ggplot2)
ggplot(data = GardenOzone, aes(x=Garden.location, y=Ozone)) +
geom_point()
ggplot(data = GardenOzone, aes(x=Ozone, y=Garden.ID)) +
geom_point()
ggplot(data = GardenOzone, aes(x=Garden.location, y=Garden.ID)) +
geom_boxplot()
ggplot(data = GardenOzone, aes(x=Garden.location, y=Ozone)) +
geom_boxplot()
ggplot(data = GardenOzone, aes(x=Garden.ID, y=Ozone)) +
geom_line()
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 4")
library(readr)
GardenOzone <- read_csv("GardenOzone.csv")
show_col_types = FALSE
View(GardenOzone)
str(GardenOzone)
#Data set contains three variables; ozone - a continuous variable, garden location - an ordinal categorical variable with two levels (East and West), and a nominal categorical variable
#Defining variables
#Response variable: Ozone
#Explanatory variables: Garden location
#Hypothesis to explore
#H0: Ozone level of the garden does not depend on the garden's location
#Ha: Ozone level of the garden depends on the garden's location
#Picturing the data set
library(ggplot2)
ggplot(data = GardenOzone, aes(x=Garden.location, y=Ozone)) +
geom_boxplot() #since Garden.location is a categorical data, a box plot is needed
library(readr)
library(glm)
library(readr)
Model<-glm(Ozone~Garden.location,data=GardenOzone)
summary(Model)
anova(Model)
Model<-lm(Ozone~Garden.location,data=GardenOzone)
anova(Model)
summary(Model)
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 4")
library(readr)
ladybirds_morph_colour <- read_csv("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Data sets/ladybirds_morph_colour.csv")
View(ladybirds_morph_colour)
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 4")
rm(list = ls())
library(readr)
library(dplyr)
library(ggplot2)
ladybirds <- read_csv("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Data sets/ladybirds_morph_colour.csv")
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 4")
rm(list = ls())
library(readr)
library(dplyr)
library(ggplot2)
ladybirds <- read_csv("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Data sets/ladybirds_morph_colour.csv")
glimpse(ladybirds)
totals <- ladybirds %>%
group_by(Habitat, morph_colour) %>%
summarise(total.number = sum(number))
glimpse(ladybirds)
View(ladybirds)
totals <- ladybirds %>%
group_by(Habitat, morph_colour) %>%
summarise(total.number = sum(number))
View(totals)
ggplot(totals, aes(x = Habitat, y = total.number,
fill = morph_colour)) +
geom_bar(stat = 'identity', position = 'dodge')
ggplot(totals, aes(x = Habitat, y = total.number,
fill = morph_colour)) +
geom_bar(stat = 'identity')
ggplot(totals, aes(x = Habitat, y = total.number,
fill = morph_colour)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_fill_manual(values = c(black = "black", red = "red"))
#5.2.6
totals
ladybirds.mat <- xtabs(number ~ Habitat + morph_colour,
data = ladybirds)
ladybirds.mat
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 4")
rm(list = ls()) #to clear R's brain
#5.4 Introducing linear models
#General linear models are a class of model that includes regression, multiple regression, ANOVA and ANCOVA
#There is a difference between general linear model and generalized linear model, aka GLM
#5.2
#Points to note when working with data:
#1. Always plot your data first
#2. Understand the hypothesis you are testing, biologically and statistically
#Chi-square contingency table is an analysis of count data, used to test the association among two or more categorical variables
#libraries for this session
library(readr)
library(dplyr)
library(ggplot2)
ladybirds <- read_csv("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Data sets/ladybirds_morph_colour.csv")
glimpse(ladybirds)
totals <- ladybirds %>%
group_by(Habitat, morph_colour) %>%
summarise(total.number = sum(number))
View(totals)
totals
#using barchart to summarize data
ggplot(totals, aes(x = Habitat, y = total.number,
fill = morph_colour)) +
geom_bar(stat = 'identity', position = 'dodge')
# the aesthetic 'fill = morph_colour' was used here because we want to see our geometry output as a bar, and these bars can be filled with a colour. Using 'colour = morph_colour' will alter the outlines of the bar, so not advisable to use that aesthetic
#stat = 'identity' tells ggplot not to make any calculations
#position = 'dodge' helped us to have the two bars for habitat group next to each other; if we didn't specify that, we would have a stacked barplot
#trying out what will happen without including the aes position
ggplot(totals, aes(x = Habitat, y = total.number,
fill = morph_colour)) +
geom_bar(stat = 'identity')
#output: a stacked barchart!!
#5.2.4 - Fixing the colours
#we want to ensure that the colours in the barchart are actually black and red as indicated in the data itself
ggplot(totals, aes(x = Habitat, y = total.number,
fill = morph_colour)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_fill_manual(values = c(black = "black", red = "red"))
#5.2.5 - from the graph, we see that there are more black ladybirds in the industrial havitat vs the rural habitat that has more red ladybirds
#Important note here: We ahevn't used the Chi-square here. Recall, the chi-square test compares the frequencies/proportion and not absolute numbers
#5.2.6
#to run the chi-square, you need to present your data as a matrix; this means transforming your dataframe into a matrix
#to do this, we will use the xtabs() function, which is the equivalent of a cross(x)-tabulation in Excel
ladybirds.mat <- xtabs(number ~ Habitat + morph_colour,
data = ladybirds)
#Please cross-tabulate the 'number' column of counts in the totals dataframe by the Habitat and morph_colour variables
#ladybirds.mat is the new name we're calling the matrix data, number here is a column header in the original data (ladybirds)
ladybirds.mat
chisq.test(ladybirds.mat)
ladybirds.chi <- chisq.test(ladybirds.mat)
names(ladybirds.chi)
ladybirds.chi$expected
ladybirds.chi$p.value
ladybirds.chi$method
rm(list = ls())
#Two-sample t-test
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 4")
library(readr)
library(dplyr)
library(ggplot2)
GardenOzone <- read_csv("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Data sets/GardenOzone.csv")
glimpse(GardenOzone)
GardenOzone
View(GardenOzone)
GardenOzone <- read.csv("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Data sets/GardenOzone.csv")
glimpse(GardenOzone)
ggplot(GardenOzone, aes(x = Ozone)) +
geom_histogram(binwidth = 10) +
facet_wrap(~ Garden.location, ncol = 1) +
theme_bw()
totals <- GardenOzone %>%
group_by(Ozone, Garden.location) %>%
summarise(Garden.ID = sum(number))
totals <- GardenOzone %>%
group_by(Ozone, Garden.location) %>%
summarise(Garden.ID)
totals
totals <- GardenOzone %>%
group_by(Garden.location, Ozone) %>%
summarise(Garden.ID)
totals
totals <- GardenOzone %>%
group_by(Garden.location, Ozone)
totals
totals <- GardenOzone %>%
group_by(Garden.location, Ozone) %>%
summarise(Garden.location)
totals
totals <- GardenOzone %>%
group_by(Garden.location, Ozone) %>%
summarise(Garden.ID)
totals
OzoneLevels<- GardenOzone %>%
group_by(Garden.location)
OzoneLevels
OzoneLevels<- GardenOzone %>%
group_by(Garden.location) %>%
summarise(Garden.ID)
library(dplyr)
t.test(Ozone ~ Garden.location, data = GardenOzone)
var.test(Ozone ~ Garden.location, data = GardenOzone)
var.test(Ozone ~ Garden.location, data = ozone)
var.test(Ozone ~ Garden.location, data = GardenOzone)
var.test(Ozone ~ Garden.location, data = GardenOzone)
rm(list = ls())
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 4")
library(readr)
library(dplyr)
library(ggplot2)
Plant_GR <- read.csv("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Data sets/plant.growth.rate.csv")
glimpse(Plant_GR)
View(Plant_GR)
ggplot(Plant_GR,
aes(x = soil.moisture.content, y = plant.growth.rate)) +
geom_point() +
ylab("Plant Growth Rate (mm/week)") +
theme_bw()
model_pgr <- lm(plant.growth.rate ~ soil.moisture.content,
data = Plant_GR)
model_pgr
anova(model_pgr)
model_pgr
anova(model_pgr)
model_pgr
anova(model_pgr)
model_pgr <- lm(plant.growth.rate ~ soil.moisture.content,
data = Plant_GR)
model_pgr
anova(model_pgr)
library(ggfortify)
install.packages(ggfortify)
autoplot(model_pgr, smooth.colour = NA)
library(ggfortify)
autoplot(model_pgr, smooth.colour = NA)
install.packages("ggfortify")
library(ggfortify)
autoplot(model_pgr, smooth.colour = NA)
autoplot(model_pgr, smooth.colour = NA)
rm(list=ls()
rm(list=ls())
?rm
rm(list = ls())
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 5")
library(readr)
library(ggplot2)
library(ggeffects)
library(dplyr)
library(tidyr)
library(lubridate)
DogCortisol <- read.csv("ASWEL - dog cort data/Dog cort.csv")
View(DogCortisol)
glimpse(DogCortisol)
ggplot(data = DogCortisol, aes(x = Week, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Treatment, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Treatment, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Time, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Time, y = Cortisol)) +
geom_point()
---
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 5")
---
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 5")
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 5")
library(readr)
library(ggplot2)
library(ggeffects)
library(dplyr)
library(tidyr)
library(lubridate)
DogCortisol <- read.csv("ASWEL - dog cort data/Dog cort.csv")
View(DogCortisol)
glimpse(DogCortisol)
ggplot(data = DogCortisol, aes(x = Week, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Treatment, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Time, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Time, y = Cortisol)) +
geom_point()
Model1<-lm(Cortisol~Tretament + Week, data=DogCortisol)
Model1<-lm(Cortisol~Treatment + Week, data=DogCortisol) #to fit a model; response variable
#is the cortisol, explanatory variables are treatment and week
anova(Model1)
summary(Model1)
?factor
ggplot(DogCortisol, aes(x = Treatment, y = Cortisol,
fill = Sex)) +
geom_bar(stat = 'identity', position = 'dodge')
DogCortisol$Treatment <- as.factor(DogCortisol$Treatment)
DogCortisol$Treatment <- as.factor(DogCortisol$Treatment)
DogCortisol$Week <- as.factor(DogCortisol$Week)
DogCortisol$Sex <- as.factor(DogCortisol$Sex)
ggplot(data = DogCortisol, aes(x = Week, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Treatment, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Time, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Sex, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Time, y = Cortisol)) +
geom_point()
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 5")
library(readr)
library(ggplot2)
library(ggeffects)
library(dplyr)
library(tidyr)
library(lubridate)
DogCortisol <- read.csv("ASWEL - dog cort data/Dog cort.csv")
View(DogCortisol)
glimpse(DogCortisol)
DogCortisol$Treatment <- as.factor(DogCortisol$Treatment)
DogCortisol$Week <- as.factor(DogCortisol$Week)
DogCortisol$Sex <- as.factor(DogCortisol$Sex)
ggplot(data = DogCortisol, aes(x = Week, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Treatment, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Sex, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Time, y = Cortisol)) +
geom_point()
ggplot(DogCortisol, aes(x = Treatment, y = Cortisol,
fill = Sex)) +
geom_bar(stat = 'identity', position = 'dodge')
na.omit(NA)
View(DogCortisol)
glimpse(DogCortisol)
DogCortisol <- na.omit(DogCortisol) #to remove observation with NA
DogCortisol
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 5")
library(readr)
library(ggplot2)
library(ggeffects)
library(dplyr)
library(tidyr)
library(lubridate)
DogCortisol <- read.csv("ASWEL - dog cort data/Dog cort.csv")
View(DogCortisol)
glimpse(DogCortisol)
DogCortisol <- na.omit(DogCortisol) #to remove observation with NA
DogCortisol
DogCortisol$Treatment <- as.factor(DogCortisol$Treatment)
DogCortisol$Week <- as.factor(DogCortisol$Week)
DogCortisol$Sex <- as.factor(DogCortisol$Sex)
ggplot(data = DogCortisol, aes(x = Week, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Treatment, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Sex, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Time, y = Cortisol)) +
geom_point()
ggplot(DogCortisol, aes(x = Treatment, y = Cortisol,
fill = Sex)) +
geom_bar(stat = 'identity', position = 'dodge')
Model1<-lm(Cortisol~Treatment + Week, data=DogCortisol)
anova(Model1)
summary(Model1)
Model2<-lm(Cortisol~Treatment, data=DogCortisol) #to see the which of the 2 treatments
#has an effect on the cortisol
anova(Model2)
Model1<-lm(Cortisol~Treatment, data=DogCortisol) #to see the which of the 2 treatments
#has an effect on the cortisol
anova(Model1)
Model2<-lm(Cortisol~Sex, data=DogCortisol) #to see the effect of sex on cortisol
anova(Model2)
Model3<-lm(Cortisol~Week, data=DogCortisol) #to see the effect of sex on cortisol
anova(Model3)
Model4<-lm(Cortisol~Treatment, Treatment:Sex, data=DogCortisol) #to see the effect of sex on cortisol
anova(Model4)
Model4<-lm(Cortisol~Treatment + Treatment:Sex, data=DogCortisol)
anova(Model4)
setwd("~/Documents/UofG PhD Masterfile/KRS 2024/Intro_to_R/Day 5")
library(readr)
library(ggplot2)
library(ggeffects)
library(dplyr)
library(tidyr)
library(lubridate)
DogCortisol <- read.csv("ASWEL - dog cort data/Dog cort.csv")
View(DogCortisol)
glimpse(DogCortisol)
DogCortisol <- na.omit(DogCortisol) #to remove observation with NA
DogCortisol
DogCortisol$Treatment <- as.factor(DogCortisol$Treatment)
DogCortisol$Week <- as.factor(DogCortisol$Week)
DogCortisol$Sex <- as.factor(DogCortisol$Sex)
ggplot(data = DogCortisol, aes(x = Week, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Treatment, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Sex, y = Cortisol)) +
geom_boxplot()
ggplot(data = DogCortisol, aes(x = Time, y = Cortisol)) +
geom_point()
ggplot(DogCortisol, aes(x = Treatment, y = Cortisol,
fill = Sex)) +
geom_bar(stat = 'identity', position = 'dodge')
Model1<-lm(Cortisol~Treatment, data=DogCortisol) #to see the which of the 2 treatments
#has an effect on the cortisol
anova(Model1)
Model2<-lm(Cortisol~Sex, data=DogCortisol) #to see the effect of sex on cortisol
anova(Model2)
Model3<-lm(Cortisol~Week, data=DogCortisol) #to see the effect of sex on cortisol
anova(Model3)
Model4<-lm(Cortisol~Time, data=DogCortisol) #to see the effect of sex on cortisol
anova(Model4)
anova(Model5)
Model5<-lm(Cortisol~Treatment + Treatment:Sex, data=DogCortisol)
anova(Model5)
summary(Model1)
summary(Model5)
summary(Model2)
Model6<-lm(Cortisol~Treatment + Treatment:Week, data=DogCortisol)
anova(Model6)
summary(Model6)
logLik(Model1)
library(lmtest)
Model7<-lm(Cortisol~Treatment + Week + Sex, data=DogCortisol)
anova(Model7)
summary(Model7)
Model8<-lm(Cortisol~Treatment + Treatment:Time, data=DogCortisol)
summary(Model8)
Model9<-lm(Cortisol~Treatment:Week, data=DogCortisol)
summary(Model9)
lrtest(model1,model8)
lrtest(Model1,Model8)
Model9<-lm(Cortisol~ Treatment:Week + Treatment + Week, data=DogCortisol)
summary(Model9)
Model10<-lm(Cortisol~Treatment:Sex + Treatment:Week + Treatment:Time + Treatment + Sex + Treatment + Week + Time)
Model10<-lm(Cortisol~Treatment:Sex + Treatment:Week + Treatment:Time + Treatment + Sex + Treatment + Week + Time, data=DogCortisol)
summary(Model10)
)
Model10<-lm(Cortisol~Treatment:Sex + Treatment:Week + Treatment:Time + Treatment + Sex + Week + Time, data=DogCortisol)
summary(Model10)
ggplot(DogCortisol, aes(x = Treatment, y = Cortisol,
fill = Week)) +
geom_bar(stat = 'identity', position = 'dodge')
DogCortisol %>%
filter(!is.na(Sex) & !is.na(Treatment) & !is.na(Cortisol)) %>%
ggplot(aes(y = Cortisol, x = Treatment, fill = Sex)) +
geom_boxplot() +
labs(y = "Cortisol", x = "Treatment", fill = "Sex")
DogCortisol %>%
filter(!is.na(Week) & !is.na(Treatment) & !is.na(Cortisol)) %>%
ggplot(aes(y = Cortisol, x = Treatment, fill = Week)) +
geom_boxplot() +
labs(y = "Cortisol", x = "Treatment", fill = "Week")
